{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\PP\\\\Documents\\\\Mi Experimento\\\\testing-moving-between-screens\\\\src\\\\screens\\\\Detail.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nfunction arabicToRoman(number) {\n  var roman = \"\";\n  var romanNumList = {\n    M: 1000,\n    CM: 900,\n    D: 500,\n    CD: 400,\n    C: 100,\n    XC: 90,\n    L: 50,\n    XV: 40,\n    X: 10,\n    IX: 9,\n    V: 5,\n    IV: 4,\n    I: 1\n  };\n  var a;\n  if (number < 1 || number > 3999) return \"Enter a number between 1 and 3999\";else {\n    for (var key in romanNumList) {\n      a = Math.floor(number / romanNumList[key]);\n\n      if (a >= 0) {\n        for (var i = 0; i < a; i++) {\n          roman += key;\n        }\n      }\n\n      number = number % romanNumList[key];\n    }\n  }\n  return roman;\n}\n\nfunction Detail(props) {\n  var _this = this;\n\n  var route = props.route;\n  var navigation = props.navigation;\n  var item = route.params.item;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      movie = _React$useState2[0],\n      setMovie = _React$useState2[1];\n\n  var title = '';\n\n  if (item['Title']) {\n    title = item['Title'];\n    setMovie(item);\n  }\n\n  console.log(movie);\n  useEffect(function () {\n    fetch(\"http://localhost:3000/movie/\" + title, {\n      \"method\": \"GET\",\n      mode: 'cors'\n    }).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      setMovie(response);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }, []);\n  var casting = '';\n  var directors = '';\n  casting = movie.Casting.split(\", \");\n  directors = movie.Directors.split(\", \");\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, 'Release Year ' + arabicToRoman(item['Release Year'])), React.createElement(View, {\n    style: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.cardText2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Producers: \", item.Producers), React.createElement(Text, {\n    style: styles.cardText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Casting:\"), React.createElement(FlatList, {\n    style: {\n      padding: 0,\n      margin: 0\n    },\n    data: casting,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        style: {\n          padding: 0,\n          margin: 0\n        },\n        onPress: function onPress() {\n          return navigation.navigate('DetailActors', {\n            item: item\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 81\n        }\n      }, React.createElement(Text, {\n        style: styles.cardText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 195\n        }\n      }, item));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }\n  }), React.createElement(Text, {\n    style: styles.cardText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }\n  }, \"Directors:\"), React.createElement(FlatList, {\n    data: directors,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 54\n        }\n      }, React.createElement(Text, {\n        style: styles.cardText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 72\n        }\n      }, item));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#ebebeb'\n  },\n  text: {\n    color: '#101010',\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  card: {\n    width: 350,\n    height: 400,\n    borderRadius: 10,\n    backgroundColor: '#101010',\n    margin: 10,\n    padding: 10,\n    alignItems: 'left'\n  },\n  cardText: {\n    fontSize: 18,\n    color: '#ffd700',\n    marginBottom: 5\n  },\n  cardText2: {\n    fontSize: 18,\n    color: '#ffd700',\n    marginBottom: 15\n  }\n});\nexport default Detail;","map":{"version":3,"sources":["C:/Users/PP/Documents/Mi Experimento/testing-moving-between-screens/src/screens/Detail.js"],"names":["React","useState","useEffect","arabicToRoman","number","roman","romanNumList","M","CM","D","CD","C","XC","L","XV","X","IX","V","IV","I","a","key","Math","floor","i","Detail","props","route","navigation","item","params","movie","setMovie","title","console","log","fetch","mode","then","response","json","catch","err","casting","directors","Casting","split","Directors","styles","container","text","card","cardText2","Producers","cardText","padding","margin","navigate","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","color","fontSize","fontWeight","width","height","borderRadius","marginBottom"],"mappings":"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","sourcesContent":["// src/screens/Home.js\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport { StyleSheet, View, Text, FlatList, TouchableOpacity } from 'react-native'\r\n\r\nfunction arabicToRoman(number){\r\n\tlet roman = \"\";\r\n\tconst romanNumList = {M:1000,CM:900, D:500,CD:400, C:100, XC:90,L:50, XV: 40, X:10, IX:9, V:5, IV:4, I:1};\r\n\tlet a;\r\n\tif(number < 1 || number > 3999)\r\n\t  return \"Enter a number between 1 and 3999\";\r\n\telse{\r\n\t  for(let key in romanNumList){\r\n\t\t  a = Math.floor(number / romanNumList[key]);\r\n\t\t  if(a >= 0){\r\n\t\t\t  for(let i = 0; i < a; i++){\r\n\t\t\t\troman += key;\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t  number = number % romanNumList[key];\r\n\t  }\r\n\t}\r\n\treturn roman;\r\n}\r\n\r\nfunction Detail(props) {\r\n  const { route } = props\r\n  const { navigation } = props\r\n  const { item } = route.params\r\n  let [movie, setMovie] = React.useState('')\r\n  var title = '';\r\n  if(item['Title']){\r\n\t  title = item['Title'];\r\n\t  setMovie(item);\r\n  }\r\n  console.log(movie);\r\n  useEffect(() => {\r\n\tfetch(\"http://localhost:3000/movie/\"+title, {\"method\": \"GET\", mode: 'cors'}).then(response => response.json()).then(response => {\r\n        setMovie(response)\r\n\t}).catch(err => {console.log(err);})\r\n  }, [])\r\n  \r\n  var casting = '';\r\n  var directors = '';\r\n  casting = movie.Casting.split(\", \")\r\n  directors = movie.Directors.split(\", \")\r\n  \r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.text}>{'Release Year ' + arabicToRoman(item['Release Year'])}</Text>\r\n      <View style={styles.card}>\r\n        <Text style={styles.cardText2}>Producers: {item.Producers}</Text>\r\n        <Text style={styles.cardText}>Casting:</Text>\r\n\t\t<FlatList style={{padding:0,margin:0}} data={casting} renderItem={({item}) => <TouchableOpacity style={{padding:0,margin:0}} onPress={() => navigation.navigate('DetailActors', { item: item})}><Text style={styles.cardText}>{item}</Text></TouchableOpacity>}/>\r\n\t\t<Text style={styles.cardText}>Directors:</Text>\r\n\t\t<FlatList data={directors} renderItem={({item}) => <TouchableOpacity><Text style={styles.cardText}>{item}</Text></TouchableOpacity>}/>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#ebebeb'\r\n  },\r\n  text: {\r\n    color: '#101010',\r\n    fontSize: 24,\r\n    fontWeight: 'bold'\r\n  },\r\n  card: {\r\n    width: 350,\r\n    height: 400,\r\n    borderRadius: 10,\r\n    backgroundColor: '#101010',\r\n    margin: 10,\r\n    padding: 10,\r\n    alignItems: 'left'\r\n  },\r\n  cardText: {\r\n    fontSize: 18,\r\n    color: '#ffd700',\r\n    marginBottom: 5\r\n  },\r\n  cardText2: {\r\n    fontSize: 18,\r\n    color: '#ffd700',\r\n    marginBottom: 15\r\n  }\r\n})\r\n\r\nexport default Detail"]},"metadata":{},"sourceType":"module"}